// routes/order.js
import express from 'express';
import nodemailer from 'nodemailer';
import axios from 'axios';
import rateLimit from 'express-rate-limit';

const router = express.Router();

// –ê–Ω—Ç–∏—Å–ø–∞–º: –º–∞–∫—Å–∏–º—É–º 1 –∑–∞—è–≤–∫–∞ —Å IP –≤ 10 —Å–µ–∫
const limiter = rateLimit({
  windowMs: 10 * 1000, // 10 —Å–µ–∫—É–Ω–¥
  max: 2,
  message: '–°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á—É—Ç—å –ø–æ–∑–∂–µ.',
});
router.use(limiter);

router.post('/', async (req, res) => {
  const { name, phone } = req.body;

  if (!name || !phone) {
    console.warn('‚ùå –ó–∞–ø—Ä–æ—Å –±–µ–∑ –∏–º–µ–Ω–∏ –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞');
    return res.status(400).json({ error: '–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
  }

  const text = `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞\nüë§ –ò–º—è: ${name}\nüìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phone}`;

  const YANDEX_EMAIL = process.env.YANDEX_EMAIL;
  const YANDEX_PASS = process.env.YANDEX_PASS;
  const RECIPIENTS = process.env.RECIPIENTS
    ? process.env.RECIPIENTS.split(',').map((email) => email.trim())
    : [YANDEX_EMAIL];

  const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
  const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

  // const STRAPI_URL = process.env.STRAPI_URL || 'http://localhost:1337';

  // === 1. Email ===
  try {
    const transporter = nodemailer.createTransport({
      host: 'smtp.yandex.ru',
      port: 465,
      secure: true,
      auth: {
        user: YANDEX_EMAIL,
        pass: YANDEX_PASS,
      },
    });

    await transporter.sendMail({
      from: YANDEX_EMAIL,
      to: RECIPIENTS.join(','),
      subject: '–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞',
      text,
      html: `
      <div style="font-family: Arial, sans-serif; font-size: 16px; color: #333;">
        <h2 style="color: #1a73e8;">üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞</h2>
        <p><strong>–ò–º—è:</strong> ${name}</p>
        <p><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ${phone}</p>
        <hr style="border: none; border-top: 1px solid #eee;" />
        <p style="font-size: 12px; color: #888;">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Å–∞–π—Ç–∞ delaizabor-nsk.ru</p>
      </div>
    `,
    });

    console.log('Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞:', RECIPIENTS.join(', '));
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', err.message);
  }

  // === 2. Telegram ===
  try {
    await axios.post(
      `https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`,
      {
        chat_id: TELEGRAM_CHAT_ID,
        text,
      }
    );
    console.log('Telegram-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', err.message);
  }

  // === 3. Strapi ===
  // try {
  //   await axios.post(`${STRAPI_URL}/api/zayavkas`, {
  //     data: { name, phone },
  //   });
  //   console.log('–ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ Strapi');
  // } catch (err) {
  //   console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ Strapi:', err.message);
  // }

  res.status(200).json({ message: '–ó–∞—è–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞' });
});

export default router;
